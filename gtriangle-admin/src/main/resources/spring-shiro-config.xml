<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
	http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-4.1.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
	http://www.springframework.org/schema/mvc
    http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd
    http://www.springframework.org/schema/aop
    http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
    http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.1.xsd"
	default-lazy-init="false">

	<context:property-placeholder location="classpath:jdbc.properties"/>
	
	
	<bean id="credentialsMatcher" class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
			<property name="hashAlgorithmName" value="md5" />
			<property name="hashIterations" value="1" />
			<property name="storedCredentialsHexEncoded" value="true" />
	</bean>
			
	<!-- Realm实现 -->
	<bean id="gTriangleAuthorizingRealm" class="com.gtriangle.admin.permission.GTriangleAuthorizingRealm">
		<property name="credentialsMatcher" ref="credentialsMatcher" />
		<property name="cachingEnabled" value="true" />
		<property name="authenticationCachingEnabled" value="true" />
		<property name="authenticationCacheName" value="authenticationCache" />
		<property name="authorizationCachingEnabled" value="true" />
		<property name="authorizationCacheName" value="authorizationCache" /> 
	</bean>

	<!-- 会话ID生成器 -->
	<bean id="sessionIdGenerator"
		class="org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator" />

	<!-- 会话Cookie模板 -->
	<bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
		<constructor-arg value="sid" />
		<property name="httpOnly" value="true" />
		<property name="maxAge" value="-1" />
	</bean>

	<!-- 会话DAO -->
	<bean id="sessionDAO"
		class="org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO">
		<property name="activeSessionsCacheName" value="shiro-activeSessionCache" />
		<property name="sessionIdGenerator" ref="sessionIdGenerator" />
	</bean>


	<!-- 会话管理器-->
	<bean id="sessionManager"
		class="com.gtriangle.admin.GTriangleWebSessionManager">
		<property name="globalSessionTimeout" value="43200000" />
		<property name="deleteInvalidSessions" value="false" />
		<property name="sessionValidationSchedulerEnabled" value="false" />
		<!--<property name="sessionValidationScheduler" ref="sessionValidationScheduler" />-->
		<property name="sessionDAO" ref="sessionDAO" />
		<property name="sessionIdCookieEnabled" value="true" />
		<property name="sessionIdCookie" ref="sessionIdCookie" />
	</bean>
	<!-- 基于Form表单的身份验证过滤器 -->
	<bean id="formAuthenticationFilter"
		class="org.apache.shiro.web.filter.authc.FormAuthenticationFilter">
		<property name="usernameParam" value="username" />
		<property name="passwordParam" value="password" />
		<property name="rememberMeParam" value="rememberMe" />
		<property name="loginUrl" value="/login.jsp" />
	</bean>
	

 	<!-- 带验证码图片时使用 begin -->
	<bean id="sessionCaptchaStore" class="com.gtriangle.admin.jcaptcha.SessionCaptchaStore" />
		
	<bean id="jcaptcha" class="com.gtriangle.admin.jcaptcha.JCaptcha">
		<constructor-arg index="0" ref="sessionCaptchaStore" />
	</bean>

	<!-- 带验证码图片时使用 end -->

   <!-- 安全管理器 -->
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<property name="realm" ref="gTriangleAuthorizingRealm" />
		<property name="cacheManager" ref="shiroCacheManager" />
		<property name="sessionManager" ref="sessionManager" /> 
	</bean>
	
	<bean id="authcFilter" class="com.gtriangle.admin.permission.filter.GTriangleAuthenticationFilter" >
		<property name="jcaptchaParam" value="jcaptchaCode" />
		<property name="jcaptcha" ref="jcaptcha" />
	</bean>
	<bean id="gTriangleUserFilter" class="com.gtriangle.admin.permission.filter.GTriangleUserFilter" />
	<bean id="logoutFilter" class="com.gtriangle.admin.permission.filter.GTriangleLogoutFilter">
	     <property name="redirectUrl" value="/login.jsp" />
	</bean>
	<bean id="gTrianglePermAuthzFilter" class="com.gtriangle.admin.permission.filter.GTrianglePermAuthzFilter" />

	<!-- Shiro的Web过滤器,myAccessControlFilter[admin],myAdviceFilter,myPathMatchingFilter -->
	<bean id="filterChainManager" class="com.gtriangle.admin.permission.auth.CustomDefaultFilterChainManager">
		<property name="loginUrl" value="/login.jsp" />
		<property name="successUrl" value="/mgt/v_index" />
		<property name="unauthorizedUrl" value="/unauthorized.jsp" />
		<property name="customFilters">
			<util:map>
				<entry key="authc" value-ref="authcFilter" />
				<entry key="gtuser" value-ref="gTriangleUserFilter" />
				<entry key="logout" value-ref="logoutFilter" />
				<entry key="perms" value-ref="gTrianglePermAuthzFilter" />
			</util:map>
		</property>
		<property name="defaultFilterChainDefinitions">
			<value>
				/res/** = anon
				/*.html = anon
				/unauthorized.jsp = anon
				/jcaptcha* = anon
				/account/** = anon
				/pcb/** = anon
				/login.jsp = authc
				/mgt/logout = logout
				/authenticated.jsp = authc
				/mgt/** = gtuser
			</value>
		</property>
	</bean>
	
	<bean id="filterChainResolver" class="com.gtriangle.admin.permission.auth.CustomPathMatchingFilterChainResolver">
        <property name="customDefaultFilterChainManager" ref="filterChainManager"/>
    </bean>

    <!-- Shiro的Web过滤器 -->
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <property name="securityManager" ref="securityManager"/>

    </bean>

    <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="targetObject" ref="shiroFilter"/>
        <property name="targetMethod" value="setFilterChainResolver"/>
        <property name="arguments" ref="filterChainResolver"/>
    </bean>
    
    <!-- 相当于调用SecurityUtils.setSecurityManager(securityManager) -->
	<bean
		class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
		<property name="staticMethod"
			value="org.apache.shiro.SecurityUtils.setSecurityManager" />
		<property name="arguments" ref="securityManager" />
	</bean>

	<!-- Shiro生命周期处理器 -->
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />
	
	<import resource="classpath:spring-shiro-cache.xml"/>
</beans>